You are an accessibility reviewer applying WCAG techniques precisely and conservatively.

Topic: SC 4.1.2
Techniques context (from curated library):
{
  "topic": "SC 4.1.2 — Name, Role, Value",
  "do": [
    "Custom widgets expose correct role (native or ARIA) with a meaningful accessible name.",
    "State and value are programmatically determinable and update when the UI changes.",
    "Form controls have labels (label/for, aria-label, or aria-labelledby) that match purpose.",
    "Only use ARIA attributes that are valid for the chosen role; keep IDs unique."
  ],
  "dont": [
    "Don’t put aria-hidden on focusable/operable elements.",
    "Don’t rely on placeholder as the only label.",
    "Don’t assign invalid/unsupported roles or attributes.",
    "Don’t let DOM state drift from the accessibility tree (e.g., toggles not updating aria-pressed)."
  ],
  "edge_cases": [
    "Icon-only buttons need an accessible name (aria-label) even if visually obvious.",
    "Composite widgets (menus, tabs) require required children/parents per the ARIA spec.",
    "Dynamic components must update name/state without requiring focus loss/repaint."
  ]
}

Element context:
- Selector: iframe[width="100%"]
- HTML snippet: <iframe src="https://www.google.com/maps/embed?pb=!1m18!1m12!1m3!1d3095.4873124444953!2d-84.4455610479628!3d39.11814097943676!2m3!1f0!2f0!3f0!3m2!1i1024!2i768!4f13.1!3m3!1m2!1s0x8841b15759e6f7eb%3A0xd5ba2d25d31ee5e8!2sBrandience!5e0!3m2!1sen!2sus!4v1637610371248!5m2!1sen!2sus" width="100%" height="450" allowfullscreen="allowfullscreen" loading="lazy" style="border: 0px;">
- Attributes: {"src": "https://www.google.com/maps/embed?pb=!1m18!1m12!1m3!1d3095.4873124444953!2d-84.4455610479628!3d39.11814097943676!2m3!1f0!2f0!3f0!3m2!1i1024!2i768!4f13.1!3m3!1m2!1s0x8841b15759e6f7eb%3A0xd5ba2d25d31ee5e8!2sBrandience!5e0!3m2!1sen!2sus!4v1637610371248!5m2!1sen!2sus", "width": "100%", "height": "450", "allowfullscreen": "allowfullscreen", "loading": "lazy", "style": "border: 0px;"}
- Computed role/name (best-effort): iframe — 
- Nearby text window: 
- Accessibility snapshot (partial): {}
- Axe ruleId: frame-title
- Axe help: Frames must have an accessible name
- Axe impact: serious

AXE_DIAGNOSTICS:
(failureSummary/why_any/why_all/why_none and page_url are appended below this prompt; you MUST consider them.)

TASK:
1) Classify the element type: one of [decorative, informative, functional, complex, text-in-image, link, heading, input].

2) Decide a verdict. Allowed values (choose ONE):
   - "needs-change"  → Likely fails the referenced SC in context. Prefer this when uncertain or evidence is conflicting.
   - "redundant-ok"  → Technically passes AND additional description would only duplicate already-available text for the same control/target.
   - "decorative-ok" → Image is purely decorative (e.g., empty alt or role=presentation is appropriate).
   - "complex-needs-longdesc" → Complex image (charts/diagrams) needs extended description/longdesc per WCAG techniques.
   - "pass"          → Clearly meets the SC with no caveats.

3) Use these decision boundaries by SC (when applicable):
   • SC 1.1.1 (Non-text Content)
     - needs-change: alt missing/vague ("image", "photo", filename), or functional image’s alt fails to communicate action/target.
     - redundant-ok: alt would ONLY duplicate visible adjacent text that already names the same thing for the same control.
     - decorative-ok: purely decorative images (empty alt or role=presentation) are acceptable.
   • SC 2.4.4 (Link Purpose, In Context)
     - needs-change: "click here / learn more / read more" with no disambiguating context in the same sentence/container or accessible name.
     - redundant-ok: link text would only duplicate a unique nearby title/heading already included in the link’s accessible name.
   • SC 1.4.3 (Contrast Minimum)
     - needs-change: computed contrast < 4.5:1 (normal) or < 3:1 (large) per diagnostics; do not guess if no data—explain briefly.
     - pass: thresholds met or text is decorative/disabled.
   • SC 4.1.2 (Name, Role, Value)
     - needs-change: custom widget lacks accessible name, wrong/missing role, or state/value not exposed.
     - pass: correct role + meaningful name + state.

4) Output a concise JSON object EXACTLY with keys:
{
  "type": "<one of the element types above>",
  "verdict": "pass | needs-change | decorative-ok | redundant-ok | complex-needs-longdesc",
  "reason": "<<=200 chars; cite concrete evidence from provided context/diagnostics>>",
  "confidence": 0.0-1.0,
  "techniques_used": ["<e.g., H37>", "<e.g., G94>", "<or axe:frame-title>"]
}

Rules:
- Consider AXE_DIAGNOSTICS. Do not invent page content beyond what’s provided.
- Keep "reason" specific (mention attribute/phrase/role), not generic.
- Prefer "needs-change" when evidence is ambiguous.
- Use "redundant-ok" narrowly: only true duplication for the same control/destination.
- If no technique is clearly applicable, still return a verdict and include ["fallback"].
- Only output the JSON.


AXE_DIAGNOSTICS:
{
  "failureSummary": "Fix any of the following:\n  Element has no title attribute\n  aria-label attribute does not exist or is empty\n  aria-labelledby attribute does not exist, references elements that do not exist or references elements that are empty\n  Element's default semantics were not overridden with role=\"none\" or role=\"presentation\"",
  "why_any": [
    "non-empty-title: Element has no title attribute",
    "aria-label: aria-label attribute does not exist or is empty",
    "aria-labelledby: aria-labelledby attribute does not exist, references elements that do not exist or references elements that are empty",
    "presentational-role: Element's default semantics were not overridden with role=\"none\" or role=\"presentation\""
  ],
  "why_all": [],
  "why_none": [],
  "page_url": "https://www.brandience.com/connect"
}